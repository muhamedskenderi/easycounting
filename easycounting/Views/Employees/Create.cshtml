@model easycounting.Models.Employee

@{
    ViewBag.Title = "Add Employee";
    Layout = "~/Views/Shared/Menu.cshtml";
}

<div class="page-header">

    <div class="row">
        <div class="col-sm-12">
            <h3 class="page-title">Add Employee</h3>
            <ul class="breadcrumb">
                <li class="breadcrumb-item"><a href="@Url.Action("","home")">Dashboard</a></li>
                <li class="breadcrumb-item"><a href="/easycounting/employees">Employees</a></li>
                <li class="breadcrumb-item active">Add Employee</li>
            </ul>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Basic Info</h4>
                @using (Html.BeginForm())
                {
                    <div class="row">


                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Name</label>
                                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @required = "required" } })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Department</label>
                                @Html.EditorFor(model => model.department, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @required = "required" } })
                            </div>
                        </div>
                        

                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Position</label>
                                @Html.EditorFor(model => model.position, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @required = "required" } })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Email</label>
                                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @required = "required" } })
                            </div>

                        </div>
                    </div>

                    <div class="row mt-2">

                        <div class="col-md-8">
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Neto</label>
                            </div>
                            <div class="input-group" style="margin-top:-20px">
                                @Html.EditorFor(model => model.neto, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" , @required = "required" } })
                                <div class="input-group-append">
                                    <div class="input-group-append">
                                        <span class="input-group-text" id="basic-addon2">MKD</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                       


                    </div>

                    <div class="row mt-2">
                        <div class="col-md-8">

                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Bruto</label>
                            </div>
                            <div class="input-group" style="margin-top:-20px">
                                @Html.EditorFor(model => model.bruto, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @required = "required" } })
                                <div class="input-group-append">
                                    <div class="input-group-append">
                                        <span class="input-group-text" id="basic-addon2">MKD</span>
                                    </div>
                                </div>
                            </div>
                            <div class="alert-warning" id="error">
                                Bruto should be greater than neto!
                            </div>
                        </div>
                    </div>
                    <div class="row mt-2" >
                        <div class="col-md-8"></div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Bonus</label>
                            </div>

                            <div class="input-group" style="margin-top:-20px">
                                @Html.EditorFor(model => model.bonus, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                <div class="input-group-append">
                                    <div class="input-group-append">
                                        <span class="input-group-text" id="basic-addon2">MKD</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="text-right mt-4">
                        <button type="submit" class="btn btn-primary">Add Employee</button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        $("#error").hide();
        $("#bonus").val(0);


        $("input[name=bruto]").on("blur", function (e) {
            var myval = $(this).val();
            if ($("#neto").val() != null) {
                if (myval < $("#neto").val())
                    $("#error").show();
                else {
                    $("#error").hide();

                }
            }
            
        });

        $('input[name=bruto]').on('input blur paste', function () {
            $(this).val($(this).val().replace(/\D/g, ''))
        });
        $('input[name=neto]').on('input blur paste', function () {
            $(this).val($(this).val().replace(/\D/g, ''))
        });
        $('input[name=bonus]').on('input blur paste', function () {
            $(this).val($(this).val().replace(/\D/g, ''))
        });

    });



</script>